#include "sensors.h"

Sensors::Sensors(BEngine &engine, bool precall_)
        :BEInterface(engine, precall_)
{
  ticker_line_sensor.set_interval(config.line_sensor_config.dt);
  ticker_distance_sensor.set_interval(config.distance_sensor_config.dt);
  ticker_imu_sensor.set_interval(config.imu_sensor_config.dt);
}

Sensors::~Sensors()
{

}

bool Sensors::condition()
{
  return (ticker_line_sensor.is_time()||ticker_distance_sensor.is_time()||ticker_imu_sensor.is_time());
}

int Sensors::action()
{
  if (ticker_line_sensor.is_time())
  {
    ticker_line_sensor.reset();
    line_sensor.read();
  }

  if (ticker_distance_sensor.is_time())
  {
    ticker_distance_sensor.reset();
    distance_sensor.read();
  }

  if (ticker_imu_sensor.is_time())
  { 
    ticker_imu_sensor.reset();
    imu.read();
  }

  return 0;
}
